[
  {
    "objectID": "Boatcontent/Requirements.html",
    "href": "Boatcontent/Requirements.html",
    "title": "General Requirments",
    "section": "",
    "text": "Documents\nTraining\nEquipment",
    "crumbs": [
      "Requirements"
    ]
  },
  {
    "objectID": "Boatcontent/NMFS_OpenSciDirections/acknowledgements.html",
    "href": "Boatcontent/NMFS_OpenSciDirections/acknowledgements.html",
    "title": "Acknowledgments",
    "section": "",
    "text": "This repo and GitHub Action was based on the tutorial by Openscapes quarto-website-tutorial by Julia Lowndes and Stefanie Butland."
  },
  {
    "objectID": "Boatcontent/NMFS_OpenSciDirections/publishing.html",
    "href": "Boatcontent/NMFS_OpenSciDirections/publishing.html",
    "title": "Publishing",
    "section": "",
    "text": "To get your Quarto webpage to show up with the url\nyou have a few steps."
  },
  {
    "objectID": "Boatcontent/NMFS_OpenSciDirections/publishing.html#turn-on-github-pages-for-your-repo",
    "href": "Boatcontent/NMFS_OpenSciDirections/publishing.html#turn-on-github-pages-for-your-repo",
    "title": "Publishing",
    "section": "Turn on GitHub Pages for your repo",
    "text": "Turn on GitHub Pages for your repo\n\nTurn on GitHub Pages under Settings &gt; Pages . You will set pages to be made from the gh-pages branch and the root directory.\nTurn on GitHub Actions under Settings &gt; Actions &gt; General\n\nThe GitHub Action will automatically recreate your website when you push to GitHub after you do the initial gh-pages set-up"
  },
  {
    "objectID": "Boatcontent/NMFS_OpenSciDirections/publishing.html#do-your-first-publish-to-gh-pages",
    "href": "Boatcontent/NMFS_OpenSciDirections/publishing.html#do-your-first-publish-to-gh-pages",
    "title": "Publishing",
    "section": "Do your first publish to gh-pages",
    "text": "Do your first publish to gh-pages\nThe first time you publish to gh-pages, you need to do so locally.\n\nOn your local computer, open a terminal window and cd to your repo directory. Here is what that cd command looks like for me. You command will look different because your local repo will be somewhere else on your computer.\n\ncd ~/Documents/GitHub/NOAA-quarto-simple\n\nPublish to the gh-pages. In the terminal type\n\nquarto publish gh-pages\nThis is going to render your webpage and then push the _site contents to the gh-pages branch."
  },
  {
    "objectID": "Boatcontent/NMFS_OpenSciDirections/publishing.html#dont-like-using-gh-pages",
    "href": "Boatcontent/NMFS_OpenSciDirections/publishing.html#dont-like-using-gh-pages",
    "title": "Publishing",
    "section": "Don’t like using gh-pages?",
    "text": "Don’t like using gh-pages?\nIn some cases, you don’t want your website on the gh-pages branch. For example, if you are creating releases and you want the website pages archived in that release, then you won’t want your website pages on the gh-pages branch.\nHere are the changes you need to make if you to avoid gh-pages branch.\n\nAt the top of _quarto.yml add the following:\n\nproject: \n  type: website\n  output-dir: docs\n\nOn GitHub under Settings &gt; Pages set pages to be made from the main branch and the docs directory.\nMake sure docs is not listed in .gitignore\nPublish the site the first time locally using quarto publish from the terminal\nChange the GitHub Action because you can’t use quarto publish gh-pages. You’ll need to push to the main branch yourself (in the GitHub Action)\n\non:\n  push:\n    branches: main\n\nname: Render and Publish\n\njobs:\n  build-deploy:\n    runs-on: ubuntu-latest\n    env:\n      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}\n\n    steps:\n      - name: Check out repository\n        uses: actions/checkout@v2 \n        \n      - name: Set up R (needed for Rmd)\n        uses: r-lib/actions/setup-r@v2\n\n      - name: Install packages (needed for Rmd)\n        run: Rscript -e 'install.packages(c(\"rmarkdown\", \"knitr\", \"jsonlite\"))'\n\n      - name: Set up Quarto\n        uses: quarto-dev/quarto-actions/setup@v2\n        with:\n          # To install LaTeX to build PDF book \n          # tinytex: true \n          # uncomment below and fill to pin a version\n          # version: 0.9.600\n      \n      - name: Render Quarto Project\n        uses: quarto-dev/quarto-actions/render@v2\n        with:\n          to: html\n\n      - name: Set up Git\n        run: |\n          git config --local user.email \"actions@github.com\"\n          git config --local user.name \"GitHub Actions\"\n\n      - name: Commit all changes and push\n        run: |\n          git add -A && git commit -m 'Build site' || echo \"No changes to commit\"\n          git push origin || echo \"No changes to commit\""
  },
  {
    "objectID": "Boatcontent/NMFS_OpenSciDirections/organize.html",
    "href": "Boatcontent/NMFS_OpenSciDirections/organize.html",
    "title": "Organize with Yaml",
    "section": "",
    "text": "Quarto Books are combinations of multiple documents (chapters) into a single manuscript in one or more formats (HTML, PDF, Word Doc, etc). Our example below is based on the PAM_template_lab_manual:\nindex.qmd- the index.qmd file is in the root director for your project, and serves as the Home Page for a website. This file is mandatory.\n_quarto.yml- the _quarto.yml is the configuration file for your project, and is also located in the root directory. The _quarto.yml provides information regarding overall formatting and structure of pages within the larger document.\nREADME.md- Markdown file that serves as the readme for the github repository.\ncontent folder- This folder contains the individual pages for your document. Alternative names for this folder are sometimes used, but we have found that the term ‘content’ is less confusing that frequently used alternatives. Here we recommend using this for consistency.\n\n\nYAML is a human-readable data serialization language commonly used for configuration files. YAML works with multiple programming languages, and also allows users to add comments to their data (useful for documentation). YAML does require very specific indentation, mapping, etc. It is helpful to use a yaml checker to be sure your yaml does not have errors.\nQuarto books/websites contain a _quarto.yml file, which is the website’s configuration file. It is essentially metadata for the website that includes the order that the pages/chapters will be in. This is where you organize your site. Here is a side-by-side example:\n\nLearn more, here."
  },
  {
    "objectID": "Boatcontent/NMFS_OpenSciDirections/organize.html#how-to-organize-your-quarto-book",
    "href": "Boatcontent/NMFS_OpenSciDirections/organize.html#how-to-organize-your-quarto-book",
    "title": "Organize with Yaml",
    "section": "",
    "text": "Quarto Books are combinations of multiple documents (chapters) into a single manuscript in one or more formats (HTML, PDF, Word Doc, etc). Our example below is based on the PAM_template_lab_manual:\nindex.qmd- the index.qmd file is in the root director for your project, and serves as the Home Page for a website. This file is mandatory.\n_quarto.yml- the _quarto.yml is the configuration file for your project, and is also located in the root directory. The _quarto.yml provides information regarding overall formatting and structure of pages within the larger document.\nREADME.md- Markdown file that serves as the readme for the github repository.\ncontent folder- This folder contains the individual pages for your document. Alternative names for this folder are sometimes used, but we have found that the term ‘content’ is less confusing that frequently used alternatives. Here we recommend using this for consistency.\n\n\nYAML is a human-readable data serialization language commonly used for configuration files. YAML works with multiple programming languages, and also allows users to add comments to their data (useful for documentation). YAML does require very specific indentation, mapping, etc. It is helpful to use a yaml checker to be sure your yaml does not have errors.\nQuarto books/websites contain a _quarto.yml file, which is the website’s configuration file. It is essentially metadata for the website that includes the order that the pages/chapters will be in. This is where you organize your site. Here is a side-by-side example:\n\nLearn more, here."
  },
  {
    "objectID": "Boatcontent/NMFS_OpenSciDirections/organize.html#resources",
    "href": "Boatcontent/NMFS_OpenSciDirections/organize.html#resources",
    "title": "Organize with Yaml",
    "section": "Resources",
    "text": "Resources\n\nYaml Checker\nQuarto Yaml Options (HTML)\nQuarto Book Structure"
  },
  {
    "objectID": "Boatcontent/NMFS_OpenSciDirections/code.html",
    "href": "Boatcontent/NMFS_OpenSciDirections/code.html",
    "title": "Rendering with Code",
    "section": "",
    "text": "You can have code (R, Python or Julia) in your qmd file. You will need to have these installed on your local computer, but presumably you do already if you are adding code to your qmd files.\nx &lt;- c(5, 15, 25, 35, 45, 55)\ny &lt;- c(5, 20, 14, 32, 22, 38)\nlm(x ~ y)\n\n\nCall:\nlm(formula = x ~ y)\n\nCoefficients:\n(Intercept)            y  \n      1.056        1.326"
  },
  {
    "objectID": "Boatcontent/NMFS_OpenSciDirections/code.html#modify-the-github-action",
    "href": "Boatcontent/NMFS_OpenSciDirections/code.html#modify-the-github-action",
    "title": "Rendering with Code",
    "section": "Modify the GitHub Action",
    "text": "Modify the GitHub Action\nYou will need to change the GitHub Action in .github/workflows to install these and any needed packages in order for GitHub to be able to render your webpage. The GitHub Action install R since I used that in code.qmd. If you use Python or Julia instead, then you will need to update the GitHub Action to install those.\nIf getting the GitHub Action to work is too much hassle (and that definitely happens), you can alway render locally and publish to the gh-pages branch. If you do this, make sure to delete or rename the GitHub Action to something like\nrender-and-publish.old_yml\nso GitHub does not keep trying to run it. Nothing bad will happen if you don’t do this, but if you are not using the action (because it keeps failing), then you don’t need GitHub to run it."
  },
  {
    "objectID": "Boatcontent/NMFS_OpenSciDirections/code.html#render-locally-and-publish-to-gh-pages-branch",
    "href": "Boatcontent/NMFS_OpenSciDirections/code.html#render-locally-and-publish-to-gh-pages-branch",
    "title": "Rendering with Code",
    "section": "Render locally and publish to gh-pages branch",
    "text": "Render locally and publish to gh-pages branch\nTo render locally and push up to the gh-pages branch, open a terminal window and then cd to the directory with the Quarto project. Type this in the terminal:\nquarto render gh-pages"
  },
  {
    "objectID": "Boatcontent/NMFS_OpenSciDirections/rendering.html",
    "href": "Boatcontent/NMFS_OpenSciDirections/rendering.html",
    "title": "Rendering",
    "section": "",
    "text": "The repo includes a GitHub Action that will render (build) the website automatically when you make changes to the files. It will be pushed to the gh-pages branch.\nBut when you are developing your content, you will want to render it locally."
  },
  {
    "objectID": "Boatcontent/NMFS_OpenSciDirections/rendering.html#step-1.-make-sure-you-have-a-recent-rstudio",
    "href": "Boatcontent/NMFS_OpenSciDirections/rendering.html#step-1.-make-sure-you-have-a-recent-rstudio",
    "title": "Rendering",
    "section": "Step 1. Make sure you have a recent RStudio",
    "text": "Step 1. Make sure you have a recent RStudio\nHave you updated RStudio since about August 2022? No? Then update to a newer version of RStudio. In general, you want to keep RStudio updated and it is required to have a recent version to use Quarto."
  },
  {
    "objectID": "Boatcontent/NMFS_OpenSciDirections/rendering.html#step-2.-clone-and-create-rstudio-project",
    "href": "Boatcontent/NMFS_OpenSciDirections/rendering.html#step-2.-clone-and-create-rstudio-project",
    "title": "Rendering",
    "section": "Step 2. Clone and create RStudio project",
    "text": "Step 2. Clone and create RStudio project\nFirst, clone the repo onto your local computer. How? You can click File &gt; New Project and then select “Version Control”. Paste in the url of the repository. That will clone the repo on to your local computer. When you make changes, you will need to push those up."
  },
  {
    "objectID": "Boatcontent/NMFS_OpenSciDirections/rendering.html#step-3.-render-within-rstudio",
    "href": "Boatcontent/NMFS_OpenSciDirections/rendering.html#step-3.-render-within-rstudio",
    "title": "Rendering",
    "section": "Step 3. Render within RStudio",
    "text": "Step 3. Render within RStudio\nRStudio will recognize that this is a Quarto project by the presence of the _quarto.yml file and will see the “Build” tab. Click the “Render website” button to render to the _site folder.\nPreviewing: You can either click index.html in the _site folder and specify “preview in browser” or set up RStudio to preview to the viewer panel. To do the latter, go to Tools &gt; Global Options &gt; R Markdown. Then select “Show output preview in: Viewer panel”."
  },
  {
    "objectID": "Boatcontent/Equipment.html",
    "href": "Boatcontent/Equipment.html",
    "title": "Equipment",
    "section": "",
    "text": "E-Kit Inventories",
    "crumbs": [
      "Requirements",
      "Equipment"
    ]
  },
  {
    "objectID": "index.html#top-links",
    "href": "index.html#top-links",
    "title": "PSD Small Boats",
    "section": "Top Links",
    "text": "Top Links\n\nBoat Master Reference\nNOAA Small Boat Program",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "index.html#points-of-contact",
    "href": "index.html#points-of-contact",
    "title": "PSD Small Boats",
    "section": "Points of Contact:",
    "text": "Points of Contact:\n\nPSD Vessel Operations Coordinator: Hope Ronco, hope.ronco@noaa.gov\nVessel Program Coordinator: Chad Yoshinaga, chad.yoshinaga@noaa.gov",
    "crumbs": [
      "Home"
    ]
  },
  {
    "objectID": "Boatcontent/About_the_IRC.html",
    "href": "Boatcontent/About_the_IRC.html",
    "title": "About the Inouye Regional Center",
    "section": "",
    "text": "“Located on a national historic landmark site on Oahu’s Ford Island, NOAA’s Inouye Regional Center features the adaptive reuse of two World War II-era airplane hangars linked by a new steel and glass building. The original hangars, designed in 1939 by Albert Kahn, inspired beautifully simple solutions for how the new Center uses air, water and light.\nThe new complex accommodates 715 people in a high-performance research and office campus that integrates NOAA’s mission of “science, service and stewardship” with regional culture and ecology. It houses a diverse range of critical programs, functions and federal departments, including the Pacific Tsunami Warning Center.”1\n\nInouye Regional Center Website"
  },
  {
    "objectID": "Boatcontent/About_the_IRC.html#the-daniel-k.-inouye-regional-center",
    "href": "Boatcontent/About_the_IRC.html#the-daniel-k.-inouye-regional-center",
    "title": "About the Inouye Regional Center",
    "section": "",
    "text": "“Located on a national historic landmark site on Oahu’s Ford Island, NOAA’s Inouye Regional Center features the adaptive reuse of two World War II-era airplane hangars linked by a new steel and glass building. The original hangars, designed in 1939 by Albert Kahn, inspired beautifully simple solutions for how the new Center uses air, water and light.\nThe new complex accommodates 715 people in a high-performance research and office campus that integrates NOAA’s mission of “science, service and stewardship” with regional culture and ecology. It houses a diverse range of critical programs, functions and federal departments, including the Pacific Tsunami Warning Center.”1\n\nInouye Regional Center Website"
  },
  {
    "objectID": "Boatcontent/About_the_IRC.html#inouye-regional-center-map",
    "href": "Boatcontent/About_the_IRC.html#inouye-regional-center-map",
    "title": "About the Inouye Regional Center",
    "section": "Inouye Regional Center Map",
    "text": "Inouye Regional Center Map"
  },
  {
    "objectID": "Boatcontent/About_the_IRC.html#virtual-tour",
    "href": "Boatcontent/About_the_IRC.html#virtual-tour",
    "title": "About the Inouye Regional Center",
    "section": "Virtual Tour",
    "text": "Virtual Tour"
  },
  {
    "objectID": "Boatcontent/About_the_IRC.html#ford-island-history",
    "href": "Boatcontent/About_the_IRC.html#ford-island-history",
    "title": "About the Inouye Regional Center",
    "section": "Ford Island History",
    "text": "Ford Island History\n\nFord Island history and Interpretive Trail\nFord Island Bus Tour"
  },
  {
    "objectID": "Boatcontent/About_the_IRC.html#helpful-links",
    "href": "Boatcontent/About_the_IRC.html#helpful-links",
    "title": "About the Inouye Regional Center",
    "section": "Helpful Links",
    "text": "Helpful Links\n\nHALEA Store\nFord Island Bistro\nIRC Long-Term Parking Request (To leave car at work while deployed)"
  },
  {
    "objectID": "Boatcontent/About_the_IRC.html#footnotes",
    "href": "Boatcontent/About_the_IRC.html#footnotes",
    "title": "About the Inouye Regional Center",
    "section": "Footnotes",
    "text": "Footnotes\n\n\nFrom building developer’s webpage↩︎"
  },
  {
    "objectID": "Boatcontent/Documents.html",
    "href": "Boatcontent/Documents.html",
    "title": "Documents",
    "section": "",
    "text": "The following administrative documents must be carried on board all vessels or filed ashore prior to getting underway.",
    "crumbs": [
      "Requirements",
      "Documents"
    ]
  },
  {
    "objectID": "Boatcontent/Documents.html#general",
    "href": "Boatcontent/Documents.html#general",
    "title": "Documents",
    "section": "General",
    "text": "General\n\nSmall Boat Standards and Procedures Manual 4.2 (SBS&PM)",
    "crumbs": [
      "Requirements",
      "Documents"
    ]
  },
  {
    "objectID": "Boatcontent/Documents.html#boat-specific-form-templates",
    "href": "Boatcontent/Documents.html#boat-specific-form-templates",
    "title": "Documents",
    "section": "Boat-Specific Form Templates",
    "text": "Boat-Specific Form Templates\nSee individual boat pages for completed copies\n\nSmall Boat Operations Manual (SBOM)\nBaseline Risk Assessment (Reviewed Annually)\nMission Based Risk Assessment (Updated when change in operation)\nSmall Boat Log\n\nOfficial Logbook Entry Requirements\n\nStability Log",
    "crumbs": [
      "Requirements",
      "Documents"
    ]
  },
  {
    "objectID": "Boatcontent/Documents.html#daily-forms",
    "href": "Boatcontent/Documents.html#daily-forms",
    "title": "Documents",
    "section": "Daily Forms",
    "text": "Daily Forms\n\nFloat Plan\nGAR\nSafety Briefing",
    "crumbs": [
      "Requirements",
      "Documents"
    ]
  },
  {
    "objectID": "Boatcontent/Documents.html#checklists",
    "href": "Boatcontent/Documents.html#checklists",
    "title": "Documents",
    "section": "Checklists:",
    "text": "Checklists:\n\nWings\n\nWing Startup Checklist\n\n\n\nKayaks\n\nKayak Start Up Checklist\nKayak Shutdown Checklist",
    "crumbs": [
      "Requirements",
      "Documents"
    ]
  },
  {
    "objectID": "Boatcontent/Documents.html#placards",
    "href": "Boatcontent/Documents.html#placards",
    "title": "Documents",
    "section": "Placards",
    "text": "Placards\n\nAll motorized small boats must have a sign or placard, prohibiting the discharge of oil or oily waste per 33 CFR 155.450. These signs can be purchased at most marine supply stores.\nAll motorized small boats must have a sign or placard, listing regulations for discharging garbage per Annex V of MARPOL. These signs can be purchased at most marine supply stores.",
    "crumbs": [
      "Requirements",
      "Documents"
    ]
  },
  {
    "objectID": "Boatcontent/Training.html#training",
    "href": "Boatcontent/Training.html#training",
    "title": "Training",
    "section": "Training",
    "text": "Training\nStep 1: Review the NOAA Small Boat Standards and Procedures Manual, and then take the SBS&PM Policy Test either here via Google Form or over in CLC. Email the date(s) only of your review & passing test score to hope.ronco@noaa.gov. The test was updated recently so please take it regardless of the timing of your previous review/test.\nAdditional Trainings:\n\nHawaii Boat Safety Course(8 hours online, email cert to hope.ronco@noaa.gov and lizabeth.kashinsky@noaa.gov)\nMOCC\nNOAA Component\nOpen Water Module (OWM)\nPQS on camp boats\n\nNOAA Small Boat Operator and Crewmember Authorization Form",
    "crumbs": [
      "Requirements",
      "Training"
    ]
  },
  {
    "objectID": "Boatcontent/NMFS_OpenSciDirections/rmarkdown.html",
    "href": "Boatcontent/NMFS_OpenSciDirections/rmarkdown.html",
    "title": "R Markdown",
    "section": "",
    "text": "You can include R Markdown files in your project."
  },
  {
    "objectID": "Boatcontent/NMFS_OpenSciDirections/rmarkdown.html#r-markdown",
    "href": "Boatcontent/NMFS_OpenSciDirections/rmarkdown.html#r-markdown",
    "title": "R Markdown",
    "section": "R Markdown",
    "text": "R Markdown\nThis is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see http://rmarkdown.rstudio.com.\nWhen you click the Knit button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:\n\nsummary(cars)\n\n     speed           dist       \n Min.   : 4.0   Min.   :  2.00  \n 1st Qu.:12.0   1st Qu.: 26.00  \n Median :15.0   Median : 36.00  \n Mean   :15.4   Mean   : 42.98  \n 3rd Qu.:19.0   3rd Qu.: 56.00  \n Max.   :25.0   Max.   :120.00"
  },
  {
    "objectID": "Boatcontent/NMFS_OpenSciDirections/rmarkdown.html#including-plots",
    "href": "Boatcontent/NMFS_OpenSciDirections/rmarkdown.html#including-plots",
    "title": "R Markdown",
    "section": "Including Plots",
    "text": "Including Plots\nYou can also embed plots, for example:\n\n\n\n\n\n\n\n\n\nNote that the echo = FALSE parameter was added to the code chunk to prevent printing of the R code that generated the plot."
  },
  {
    "objectID": "Boatcontent/NMFS_OpenSciDirections/Getting-Started.html",
    "href": "Boatcontent/NMFS_OpenSciDirections/Getting-Started.html",
    "title": "Getting Started",
    "section": "",
    "text": "Open Science is a movement to make scientific research (including publications, data, software) transparent and accessible so that knowledge is shared. Here we will provide steps to get started; in future sections we will provide additional details on specific tasks/projects\n\nEmbrace the Open Science Mindset! Learn more about this approach and why it matters at Openscapes.org and the Openscapes Approach Guide.\nAdd Software Tools\n\nGithub Desktop\nRStudio (v2022.07.2 build 576 or later)\nR\nCreate a Github Login\n\nCreate a Repository using one of the following examples:\n\nCreate a Repository from a Template\n\nPAM Lab Manual Template- scroll down & follow directions ‘How to use this template’\nConsider one of Eli Holme’s templates\n\nCreate a New (or test) Repository in Github (see help here)\n\nClone your Test Repository to your local computer using Github Desktop:\n\nFile -&gt; Clone Repository -&gt; URL\nCopy URL of your Test Repository on Github and save to your Documents -&gt; Github folder using the defaults. See Introduction to Git/Github tutorial for more help.\n\nOpen project in RStudio. In the upper right hand corner of RStudio, select ‘New Project’ in the drop-down menu to add a new R Project from an Existing Project. Browse to find the appropriate folder in Documents-&gt; Github. In the lower right section of RStudio, select ‘Files’ and you will see the README.md file, which appears on the home page on your Github repository site.\nModify the README.md file. Open this file and add text and possibly a link to this document. Save the file. If you are using the latest version of RStudio (with quarto), you can modify your file using the Source Code or the Visual Editor. This is an RMarkdown file, so you can use R markdown language, or, if you prefer, you can use the visual editor which is more user-friendly. If you copy/paste an existing document into the visual editor, much of the existing formatting will be retained.\nCommit & Push to Github. Open your project in Github Desktop; Github desktop will identify the changes you made (refresh if necessary). At the bottom left, describe the modifications you made to the document, and then select ‘commit’. Once the commit goes through– select ‘Push to Origin’ at the top. This will push changes to your Github repository.\nOpen your Github repository and check out the changes on your README at the bottom of the page!\nAdopt this process as your daily habit of working on your projects locally and saving your data to Github.\n\nFor more information, see:\nIntroduction to Git/Github Tutorial (Eli Holmes, NMFS)\nGit for Humans (Alice Bartlett)\nHappy Git with R (Jenny Bryan)"
  },
  {
    "objectID": "Boatcontent/NMFS_OpenSciDirections/Getting-Started.html#getting-started-in-open-science",
    "href": "Boatcontent/NMFS_OpenSciDirections/Getting-Started.html#getting-started-in-open-science",
    "title": "Getting Started",
    "section": "",
    "text": "Open Science is a movement to make scientific research (including publications, data, software) transparent and accessible so that knowledge is shared. Here we will provide steps to get started; in future sections we will provide additional details on specific tasks/projects\n\nEmbrace the Open Science Mindset! Learn more about this approach and why it matters at Openscapes.org and the Openscapes Approach Guide.\nAdd Software Tools\n\nGithub Desktop\nRStudio (v2022.07.2 build 576 or later)\nR\nCreate a Github Login\n\nCreate a Repository using one of the following examples:\n\nCreate a Repository from a Template\n\nPAM Lab Manual Template- scroll down & follow directions ‘How to use this template’\nConsider one of Eli Holme’s templates\n\nCreate a New (or test) Repository in Github (see help here)\n\nClone your Test Repository to your local computer using Github Desktop:\n\nFile -&gt; Clone Repository -&gt; URL\nCopy URL of your Test Repository on Github and save to your Documents -&gt; Github folder using the defaults. See Introduction to Git/Github tutorial for more help.\n\nOpen project in RStudio. In the upper right hand corner of RStudio, select ‘New Project’ in the drop-down menu to add a new R Project from an Existing Project. Browse to find the appropriate folder in Documents-&gt; Github. In the lower right section of RStudio, select ‘Files’ and you will see the README.md file, which appears on the home page on your Github repository site.\nModify the README.md file. Open this file and add text and possibly a link to this document. Save the file. If you are using the latest version of RStudio (with quarto), you can modify your file using the Source Code or the Visual Editor. This is an RMarkdown file, so you can use R markdown language, or, if you prefer, you can use the visual editor which is more user-friendly. If you copy/paste an existing document into the visual editor, much of the existing formatting will be retained.\nCommit & Push to Github. Open your project in Github Desktop; Github desktop will identify the changes you made (refresh if necessary). At the bottom left, describe the modifications you made to the document, and then select ‘commit’. Once the commit goes through– select ‘Push to Origin’ at the top. This will push changes to your Github repository.\nOpen your Github repository and check out the changes on your README at the bottom of the page!\nAdopt this process as your daily habit of working on your projects locally and saving your data to Github.\n\nFor more information, see:\nIntroduction to Git/Github Tutorial (Eli Holmes, NMFS)\nGit for Humans (Alice Bartlett)\nHappy Git with R (Jenny Bryan)"
  },
  {
    "objectID": "Boatcontent/NMFS_OpenSciDirections/add-content.html",
    "href": "Boatcontent/NMFS_OpenSciDirections/add-content.html",
    "title": "Customize Content",
    "section": "",
    "text": "You can customize your content by (1) Modifying existing content, or (2) creating your own content. For examples, we will assume a folder structure such as that in the PAM Template Lab Manual."
  },
  {
    "objectID": "Boatcontent/NMFS_OpenSciDirections/add-content.html#modify-existing-content",
    "href": "Boatcontent/NMFS_OpenSciDirections/add-content.html#modify-existing-content",
    "title": "Customize Content",
    "section": "Modify Existing Content",
    "text": "Modify Existing Content\nHere are basic instructions for modifying existing content, such as the example pages provided in the PAM Template Lab Manual: 1) Ensure that you have cloned the Github Repository using Github Desktop, and that you have created an RStudio project, following directions outlined here.\n\nOpen your RStudio project (here we will assume it is a clone of the PAM Template Lab Manual), and navigate to the ‘content’ folder (lower right hand side of RStudio, Files Tab). As an example, we will change the “/content/Hardware.qmd” file. First, read the information in the page to understand the intended content. To start, we will organize different subheadings within this page.\nIdentify Sub-Headings. In this example, we will want to identify different types of Hardware used by our particular lab. In this example, we will want the following categories: “PAM Gliders”, “Drifting Recorders”, “Towed Arrays”, and “Handheld Hydrophones”.\n\nUsing the Source editor, use # to indicate Heading 1 style, ## for Heading 2 Style, etc.\nUsing the Visual editor, use the dropdown menu to select the Heading Style\n\nAdd Content. Most content will consist of text, with some images, hyperlinks, and occasional tables. To start, we recommend identifying the content you would like to put in there, and identify the Point of Contact (POC). As an example, we may put the following text:\nPOC: Jane Doe. General description of Hardware, links to online content (vendor specification page, relevant online content), instructions for build or maintain hardware (or links to that information), links to inventory, etc.\nOnce your outline is developed, fill in the content. IF someone else will collate the content– they can create it in a separate document to be copied/pasted here, or they can directly modify this page.\nIf you find you need separate pages for each sub-heading (instead of one long subheading), then create New Content, and link the new content to the _quarto.yml.\nWhen you are finished modifying your document and Project, push changes to Github using Github Desktop (see instructions here)."
  },
  {
    "objectID": "Boatcontent/NMFS_OpenSciDirections/add-content.html#create-new-content",
    "href": "Boatcontent/NMFS_OpenSciDirections/add-content.html#create-new-content",
    "title": "Customize Content",
    "section": "Create New Content",
    "text": "Create New Content\nAgain, assuming you have an RStudio project for your Github Repository, such as the example provided in the PAM Template Lab Manual: 1) Ensure that you have cloned the Github Repository using Github Desktop, and that you have created an RStudio project, following directions outlined here.\n\nOpen your RStudio project (here we will assume it is a clone of the PAM Template Lab Manual), and navigate to the ‘content’ folder (lower right hand side of RStudio, Files Tab). Select New Blank File, and in the drop-down, select Quarto Document. Then give your file a logical and descriptive name.\n\nUsing the Source editor, create a title header with the text you would like as your primary Header for this page (will appear as Header 1).\n\nAdd content below the header section, using either the Source or Visual editor in RStudio.\nAdd your new content to the _quarto.yml\nWhen you are finished modifying your document and Project, push changes to Github using Github Desktop (see instructions here)."
  },
  {
    "objectID": "Boatcontent/NMFS_OpenSciDirections/add-content.html#examples",
    "href": "Boatcontent/NMFS_OpenSciDirections/add-content.html#examples",
    "title": "Customize Content",
    "section": "Examples",
    "text": "Examples\nLooking at other people’s Quarto code is a great way to figure out how to do stuff. Most will have a link to a GitHub repo where you can see the raw code. Look for a link to edit page or see source code. This will usually be on the right. Or look for the GitHub icon somewhere.\n\nQuarto gallery\nnmfs-openscapes\nFaye lab manual\nquarto-titlepages Note the link to edit is broken. Go to repo and look in documentation directory."
  },
  {
    "objectID": "Boatcontent/NMFS_OpenSciDirections/add-content.html#resources",
    "href": "Boatcontent/NMFS_OpenSciDirections/add-content.html#resources",
    "title": "Customize Content",
    "section": "Resources",
    "text": "Resources\n\nQuarto documentation."
  },
  {
    "objectID": "Boatcontent/NMFS_OpenSciDirections/Intro.html",
    "href": "Boatcontent/NMFS_OpenSciDirections/Intro.html",
    "title": "NOAA quarto simple with R",
    "section": "",
    "text": "This is a template for a simple Quarto website (type: website). It looks like a html book (type: book) but unlike the book type it only has html format and you will not have the download options. type: website is a common format for documentation.\nThe repo includes a GitHub Action that will build the website automatically when you make changes to the files. The webpage will use the gh-pages branch. Serving the website files from this branch is a common way to keep all the website files from cluttering your main branch.\nWarning: Check that the settings will allow the GitHub Action to run. See the instructions below under “GitHub Set-up”. Scroll down to the troubleshooting section if the website is not built by the GitHub Action.\nNote: The GitHub Action installs R so you can render qmd files with R code. You will need to edit to install Python or Julia if your qmd uses those instead. If you have substantial computations, you don’t want to be re-running all the computations for files that didn’t change. Read about the freeze option for this situation. R users with complex reports with dependencies (so qmd B depends on qmd A or data file A) should be aware of the {targets} package which will help you keep track of files that need to be re-rendered due to changes in dependencies.\n\n\n\nClick the green “Use This Template” button to make a repository with this content. Make sure to make your repo public (since GitHub Pages doesn’t work on private repos unless you have a paid account) and check box to include all the branches (so that you get the gh-pages branch). \nTurn on GitHub Pages under Settings &gt; Pages . You will set pages to be made from the gh-pages branch and root directory. \nAllow GitHub Actions under Settings &gt; Actions &gt; General \nAllow GitHub Actions to write to the gh-pages branch. Scroll to the bottom under Settings &gt; Actions &gt; General, and make sure “Read and Write” is selected. \nEdit the repo description and Readme to add a link to the webpage. When you edit the description, you will see the link url in the url box or you can click on the Actions tab or the Settings &gt; Pages page to find the url to the Quarto website\n\n\n\n\n\nEdit the qmd or md files in the content folder. qmd files can include code (R, Python, Julia) and lots of Quarto markdown bells and whistles (like call-outs, cross-references, auto-citations and much more).\nAdd the files to _quarto.yml\n\n\n\n\nThe most common trouble users run into is that the book is not rendering. Check the following:\n\nThe gh-pages branch does not exist. If you forgot to check the check box to include all the branches when you created the repo from the template then it won’t exist. The Action will fail if the gh-pages branch does not already exist. You can create the branch and then push a change to main to trigger the Action to run again.\nThe GitHub Pages has not been set. You need to go to Pages under settings, and set Pages to build from the gh-pages branch.\nYou did not allow GitHub Actions to run and/or did not give read/write permission. Go to Settings &gt; Actions &gt; General, and make sure Actions are allowed (top section) and they have read/write permission (bottom section).\nYou did not push a change to the main branch. The Action is triggered by a push to main, so try making an edit to README.md and pushing that change."
  },
  {
    "objectID": "Boatcontent/NMFS_OpenSciDirections/Intro.html#github-set-up",
    "href": "Boatcontent/NMFS_OpenSciDirections/Intro.html#github-set-up",
    "title": "NOAA quarto simple with R",
    "section": "",
    "text": "Click the green “Use This Template” button to make a repository with this content. Make sure to make your repo public (since GitHub Pages doesn’t work on private repos unless you have a paid account) and check box to include all the branches (so that you get the gh-pages branch). \nTurn on GitHub Pages under Settings &gt; Pages . You will set pages to be made from the gh-pages branch and root directory. \nAllow GitHub Actions under Settings &gt; Actions &gt; General \nAllow GitHub Actions to write to the gh-pages branch. Scroll to the bottom under Settings &gt; Actions &gt; General, and make sure “Read and Write” is selected. \nEdit the repo description and Readme to add a link to the webpage. When you edit the description, you will see the link url in the url box or you can click on the Actions tab or the Settings &gt; Pages page to find the url to the Quarto website"
  },
  {
    "objectID": "Boatcontent/NMFS_OpenSciDirections/Intro.html#customize",
    "href": "Boatcontent/NMFS_OpenSciDirections/Intro.html#customize",
    "title": "NOAA quarto simple with R",
    "section": "",
    "text": "Edit the qmd or md files in the content folder. qmd files can include code (R, Python, Julia) and lots of Quarto markdown bells and whistles (like call-outs, cross-references, auto-citations and much more).\nAdd the files to _quarto.yml"
  },
  {
    "objectID": "Boatcontent/NMFS_OpenSciDirections/Intro.html#troubleshooting-builds",
    "href": "Boatcontent/NMFS_OpenSciDirections/Intro.html#troubleshooting-builds",
    "title": "NOAA quarto simple with R",
    "section": "",
    "text": "The most common trouble users run into is that the book is not rendering. Check the following:\n\nThe gh-pages branch does not exist. If you forgot to check the check box to include all the branches when you created the repo from the template then it won’t exist. The Action will fail if the gh-pages branch does not already exist. You can create the branch and then push a change to main to trigger the Action to run again.\nThe GitHub Pages has not been set. You need to go to Pages under settings, and set Pages to build from the gh-pages branch.\nYou did not allow GitHub Actions to run and/or did not give read/write permission. Go to Settings &gt; Actions &gt; General, and make sure Actions are allowed (top section) and they have read/write permission (bottom section).\nYou did not push a change to the main branch. The Action is triggered by a push to main, so try making an edit to README.md and pushing that change."
  },
  {
    "objectID": "Boatcontent/BoatRecords.html",
    "href": "Boatcontent/BoatRecords.html",
    "title": "BoatRecords",
    "section": "",
    "text": "F1536 - Whale Wing\nF1535 - FFS2 Wing\nF1534 - PHR2 Wing",
    "crumbs": [
      "Boats",
      "Records"
    ]
  },
  {
    "objectID": "Boatcontent/BoatRecords.html#wings-class-a",
    "href": "Boatcontent/BoatRecords.html#wings-class-a",
    "title": "BoatRecords",
    "section": "",
    "text": "F1536 - Whale Wing\nF1535 - FFS2 Wing\nF1534 - PHR2 Wing",
    "crumbs": [
      "Boats",
      "Records"
    ]
  },
  {
    "objectID": "Boatcontent/BoatRecords.html#rhibs-class-i",
    "href": "Boatcontent/BoatRecords.html#rhibs-class-i",
    "title": "BoatRecords",
    "section": "RHIBs (Class I)",
    "text": "RHIBs (Class I)\n\nF1931 - Iwalua\nF1924 - Iwa\nF1823 - Elele\nF1822 - Kukini",
    "crumbs": [
      "Boats",
      "Records"
    ]
  },
  {
    "objectID": "Boatcontent/BoatRecords.html#mhi-kayaks-class-a",
    "href": "Boatcontent/BoatRecords.html#mhi-kayaks-class-a",
    "title": "BoatRecords",
    "section": "MHI Kayaks (Class A)",
    "text": "MHI Kayaks (Class A)\n\nF1219 - Harting\nF1214 - Dunlap\nF1213 - Billand",
    "crumbs": [
      "Boats",
      "Records"
    ]
  },
  {
    "objectID": "Boatcontent/BoatRecords.html#nwhi-kayaks-class-a",
    "href": "Boatcontent/BoatRecords.html#nwhi-kayaks-class-a",
    "title": "BoatRecords",
    "section": "NWHI Kayaks (Class A)",
    "text": "NWHI Kayaks (Class A)\n\nF0902 - FFS Kayak\nF0901 - PHR Seeker",
    "crumbs": [
      "Boats",
      "Records"
    ]
  }
]